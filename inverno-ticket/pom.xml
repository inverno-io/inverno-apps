<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Copyright 2022 Jeremy KUHN
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
		<groupId>io.inverno</groupId>
		<artifactId>inverno-applications-root</artifactId>
		<version>1.3.0-SNAPSHOT</version>
	</parent>
    <groupId>io.inverno.app</groupId>
    <artifactId>inverno-ticket</artifactId>
    
	<name>io.inverno.app.ticket</name>
	<description>Inverno Ticket application</description>

    <dependencies>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-redis-lettuce</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-security-http</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-security-jose</artifactId>
		</dependency>

		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>vue</artifactId>
			<version>3.2.26</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>5.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>bootstrap-icons</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>marked</artifactId>
			<version>4.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>highlightjs</artifactId>
			<version>10.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>simplemde</artifactId>
			<version>1.11.2</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-layout-template-json</artifactId>
		</dependency>

		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-classes-epoll</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-epoll</artifactId>
			<classifier>linux-x86_64</classifier>
		</dependency>
		
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
    </dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.inverno.tool</groupId>
					<artifactId>inverno-maven-plugin</artifactId>
					<configuration>
						<vmOptions>--add-opens reactor.core/reactor.core.publisher=lettuce.core --add-opens org.apache.logging.log4j.core/org.apache.logging.log4j.core.jackson=com.fasterxml.jackson.databind --add-opens org.apache.logging.log4j.log4j.layout.template.json/org.apache.logging.log4j.layout.template.json=org.apache.logging.log4j.core --add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.inverno.tool</groupId>
						<artifactId>inverno-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-app</id>
								<phase>package</phase>
								<goals>
									<goal>build-app</goal>
								</goals>
								<configuration>
									<vm>server</vm>
									<!-- jdk.crypto.ec: TLS, jdk.jdwp.agent: remote debug -->
									<addModules>jdk.crypto.ec,jdk.jdwp.agent</addModules>
									<launchers>
										<launcher>
											<name>inverno-ticket</name>
											<vmOptions>-Xms2G -Xmx2G -XX:+UseNUMA -XX:+UseParallelGC --add-opens reactor.core/reactor.core.publisher=lettuce.core --add-opens org.apache.logging.log4j.core/org.apache.logging.log4j.core.jackson=com.fasterxml.jackson.databind --add-opens org.apache.logging.log4j.log4j.layout.template.json/org.apache.logging.log4j.layout.template.json=org.apache.logging.log4j.core --add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
										</launcher>
									</launchers>
									<formats>
										<format>zip</format>
									</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>install-docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.inverno.tool</groupId>
						<artifactId>inverno-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-image-docker</id>
								<phase>install</phase>
								<goals>
									<goal>build-image-docker</goal>
								</goals>
								<configuration>
									<vm>server</vm>
									<!-- jdk.crypto.ec: TLS, jdk.jdwp.agent: remote debug -->
									<addModules>jdk.crypto.ec</addModules>
									<executable>inverno-ticket</executable>
									<launchers>
										<launcher>
											<name>inverno-ticket</name>
											<vmOptions>-Xms2G -Xmx2G -XX:+UseNUMA -XX:+UseParallelGC --add-opens reactor.core/reactor.core.publisher=lettuce.core --add-opens org.apache.logging.log4j.core/org.apache.logging.log4j.core.jackson=com.fasterxml.jackson.databind --add-opens org.apache.logging.log4j.log4j.layout.template.json/org.apache.logging.log4j.layout.template.json=org.apache.logging.log4j.core --add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
										</launcher>
									</launchers>
									<volumes>
										<volume>/opt/inverno-ticket/logs</volume>
									</volumes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
